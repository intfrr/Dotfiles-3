snippet echov "Echo variable" b
echo "${1:HOME} = \$$1"
endsnippet
snippet echoa "Echo array variable" b
echo "${1:args}[@] = \${$1[@]}"
endsnippet
snippet echoe "Echo error" b
echo "${0:Error}" >&2
endsnippet
snippet arr "Access array"
\${${1:args}[@]}$0
endsnippet
snippet func "Function" b
${1:my_function}() {
  ${0:echo \$1}
}
endsnippet
snippet if "If statement" b
if ${1:true}; then
  ${0:echo "true"}
fi
endsnippet
snippet [[ "True if variable matches string"
[[ ${0:-n "\$1"} ]]
endsnippet
snippet testd "True if directory"
-d "${1:\$1}"
endsnippet
snippet testdn "True if not directory"
! -d "${1:\$1}"
endsnippet
snippet testv "Test variable"
$${1:value}; then
endsnippet
snippet testb "Test boolean"
$${1:value}; then
endsnippet
snippet testf "True if regular file"
-f "${1:\$1}"
endsnippet
snippet teste "True if file exists"
-e "${1:\$1}"
endsnippet
snippet testfn "True if not file"
! -f "${1:\$1}"
endsnippet
snippet testl "True if symbolic link"
-L "${1:\$1}"
endsnippet
snippet testexe "True if error exit status"
${1:$?} -ne 0
endsnippet
snippet testex0 "True if zero exit status"
${1:$?} -eq 0
endsnippet
snippet testz "True if empty variable"
-z "$${1:1}"
endsnippet
snippet testn "True if not empty variable"
-n "$${1:1}"
endsnippet
snippet tests "True if variable matches string"
"$${1:1}" == "${2:string}"
endsnippet
snippet template "Basic template" b
#!/usr/bin/env bash


endsnippet
snippet 1while "While loop one-liner" w
while read i; do { ${0:echo $i} } done
endsnippet
snippet while ""
while read i; do
  ${0:echo $i}
done
endsnippet
snippet for "For loop" b
for i in ${1:*}; do 
  ${0:echo $i}
done
endsnippet
snippet fordir "For loop directories" b
for dir in */; do
  echo $dir;
done
endsnippet
snippet 1for "For loop one-liner" w
for i in ${1:*}; do { ${0:echo $i} } done
endsnippet
snippet 1rename "Rename files in current directory" b
for i in *; do { mv $i \`echo $i | tr '[A-Z]' '[a-z]' | tr ' ' '-'\` } done
endsnippet
snippet exitstatus "Store exit status" b
status=$?
endsnippet
snippet IFS "Change IFS" b
old_IFS=$IFS
IFS="${1: }"
IFS=${old_IFS}
endsnippet
snippet getopts "getopts" b
b=false
while getopts ":a:bh" option
  do case "$option" in
    a)
      echo "-a $OPTARG"
      ;;
    b)
      b=true
      echo "-b $b"
      ;;
    h)
      echo "Usage: command [-hb] [-a <file>]"
      exit 0
      ;;
    :)
      echo "Option -$OPTARG requires an argument" >&2
      exit 1
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
  esac
done
endsnippet
snippet >null "Redirect to null"
>/dev/null
endsnippet
snippet sete "Exit on non-zero exit status"
set -e
endsnippet
snippet setx "Print each command"
set -x
endsnippet
snippet setop "Any command in pipe fails the whole pipe"
set -x
endsnippet

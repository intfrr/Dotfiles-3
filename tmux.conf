# Settings

# This makes cut and paste with the mouse strange, but it makes scrolling no-op
# at a prompt instead of going through history, which is good.
# set -g mouse on

# Fix colors, shell colors are off without this, specifying `xterm` doesn't work with tmux
# Handled by sensible
# set -g default-terminal "screen-256color"

# Send shift arrow keys (`vim-tmux-navigator` won't work without this)
set-option -g xterm-keys on

# increase scrollback lines
# Handled by sensible
# set -g history-limit 10000

# Remove delay
# Handled by sensible
# set -s escape-time 1

# Don't enforce size of smallest window
# Handled by sensible
# setw -g aggressive-resize on

# Required for `vim-tmux-clipboard`
set -g focus-events on

# UI

# Remove administrative debris (session name, hostname, time) in status bar
set -g status-right ''
# Increase the max length of the left status
set -g status-left-length 40

# Show window activity
# Current disabled because Neovim is constantly showing output
# set -g visual-activity on
# setw -g monitor-activity on


# Colors
# Available Colors
# black, red, green, yellow, blue, magenta, cyan, white
# And (colortest.pl):
# colour0-colour255

# Status
set -g status-bg default
set -g status-fg '#aaaaaa'
# Active window
setw -g window-status-current-fg cyan
setw -g window-status-activity-fg green
# Messages
set -g message-bg default
set -g message-fg white
# Panes
set -g pane-border-fg colour236
set -g pane-active-border-fg cyan
# Selection
set -g mode-bg cyan
set -g mode-fg black


# Bindings

# Prefix, this is important because C-b is page up in Vim
unbind C-b
# set -g prefix C-Space
set -g prefix C-q

# Split commands use current path
# * `pane_current_path` doesn't work when vim is opened from a subprocess, e.g, 
# `fzf | xargs -o vim`.
# * `$PWD` uses where the vim session was started from instead of the current
# directory, so `pane_current_path` is preferable
# bind-key % split-window -h -c "$PWD"
# bind-key '"' split-window -c "$PWD"
# bind-key c new-window -c "$PWD"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -c "#{pane_current_path}"
bind-key c new-window -a -c "#{pane_current_path}"

# vim style splits
# Don't use vim style bindings because `<prefix>c` is already taken for
# creatining a window, and therefore can't be used to close a split. Without
# `<prefix>c` it's too hard to keep track of which vim bindings work.
# bind-key v split-window -h -c "#{pane_current_path}"
# bind-key s split-window -c "#{pane_current_path}"
# bind-key o kill-pane -a
bind-key C-l last-window

# Init
bind-key i source-file ~/.tmux.conf \; display "Sourced"

# Next Pane
bind-key -r C-Space select-pane -t :.+
bind-key C-q select-pane -t :.+
bind-key -r C-w select-pane -t :.+
bind-key -r W select-pane -t :.-
# Couldn't figure out how to get this to work
# set -g prefix2 C-S-Space
# bind-key -n C-S-Space select-pane -t :.-

# Synchronize
bind-key M-s set-window-option synchronize-panes \; display "Synchronize toggled"

# Windows
# Make default window commands repeatable
bind-key -r p previous-window
bind-key -r n next-window
bind-key -r C-p previous-window
bind-key -r C-n next-window

# Movement
bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R
# bind-key -r C-h select-pane -L
# bind-key -r C-j select-pane -D
# bind-key -r C-k select-pane -U
# bind-key -r C-l select-pane -R
bind-key -r M-h select-pane -L
bind-key -r M-j select-pane -D
bind-key -r M-k select-pane -U
bind-key -r M-l select-pane -R

# Resize
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# Vim Style Editing Keys
setw -g mode-keys vi

# Copy Mode
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-pipe "pbcopy"

# This version probably only uses `tmux` internal clipboard
# bind-key -t vi-copy 'y' copy-selection
# Sensible sets `emacs-edit` for command line
# Not sure why this doesn't work
# bind-key -t emacs-edit M-BSpace delete-word
# bind-key -t emacs-edit C-g cancel

bind-key C-b copy-mode \; send-keys "?$USER@" enter "n"
bind-key C-f copy-mode \; send-keys "?"

# Map Escape to cancel when using the search box
bind-key -t vi-edit Escape cancel

# Plugins
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# Platform
if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux-osx.conf'
